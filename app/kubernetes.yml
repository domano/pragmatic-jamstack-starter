apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: "myApp"
  name: "myApp"
  namespace: myapp-namespace
spec:
  replicas: 2
  selector:
    matchLabels:
      app: "myApp"
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "myApp"
    spec:
      containers:
        - image: registry.myDomain.com/homepage/app:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            initialDelaySeconds: 60
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            initialDelaySeconds: 30
          name: "myApp"
          env:
            - name: "REACT_APP_ENVIRONMENT"
              value: "PROD"
          ports:
            - containerPort: 3000
              protocol: TCP
          resources:
            requests:
              cpu: 1000m
              memory: 512M
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      imagePullSecrets:
        - name: regcred
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: "myApp"
  name: "myApp"
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app: "myApp"
  sessionAffinity: None
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # add an annotation indicating the issuer to use.
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/redirect-entry-point: https
  name: homepage-ingress
spec:
  tls:
  - hosts:
      - myDomain.com
    secretName: homepage-tls
  rules:
  - host: myDomain.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: myApp
            port:
              number: 80
---
apiVersion: cert-manager.io/v1beta1
kind: Certificate
metadata:
  name: myDomain
spec:
  secretName: homepage-tls
  dnsNames:
  - myDomain.com
  issuerRef:
    name: letsencrypt-prod #or whatever the (cluster)issuer is
    kind: ClusterIssuer